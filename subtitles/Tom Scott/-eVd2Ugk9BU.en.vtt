WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:02.580
- This week's guest video
was pitched to me as a puzzle

00:00:02.580 --> 00:00:04.080
and I couldn't solve it.

00:00:04.080 --> 00:00:06.790
So please welcome
physicist Jade Tan-Holmes

00:00:06.790 --> 00:00:08.520
who's going to show you the same puzzle

00:00:08.520 --> 00:00:10.640
and then solve it with maths.

00:00:10.640 --> 00:00:11.900
Jade, take it away.

00:00:11.900 --> 00:00:13.750
- Here's a puzzle for you.

00:00:13.750 --> 00:00:17.860
You have a painting, a piece of string,
and two pins stuck in a wall.

00:00:17.860 --> 00:00:19.610
Can you hang the painting in such a way

00:00:19.610 --> 00:00:22.020
so that if you remove
either one of the pins

00:00:22.020 --> 00:00:23.510
the painting falls?

00:00:23.510 --> 00:00:26.800
The thing to focus on here is
how to tie the string around the pins,

00:00:26.800 --> 00:00:29.083
not any of the physics of the objects.

00:00:29.960 --> 00:00:33.120
So if you tie the string in the normal way
one would hang a painting,

00:00:33.120 --> 00:00:35.380
this obviously won't work.

00:00:35.380 --> 00:00:36.810
It's pretty easy to think of ways

00:00:36.810 --> 00:00:40.410
we can tie the string so it falls
when one of this pins is removed.

00:00:40.410 --> 00:00:44.460
But the challenge is to make it fall
if either one is removed.

00:00:44.460 --> 00:00:47.453
Pause the video now if you'd
like to try it for yourself.

00:00:50.700 --> 00:00:52.010
So what we're working towards is

00:00:52.010 --> 00:00:57.420
a way to tie the string around both pins
as a whole but neither one individually.

00:00:57.420 --> 00:01:00.340
So there are a few different
ways to solve this puzzle.

00:01:00.340 --> 00:01:03.530
But we're going to do the one
which takes us through knot theory.

00:01:03.530 --> 00:01:06.730
Knot theory is the mathematical
study of tangled systems.

00:01:06.730 --> 00:01:09.130
As this is a problem about
tangling things together,

00:01:09.130 --> 00:01:11.720
chances are knot theory
will come in handy.

00:01:11.720 --> 00:01:13.900
With puzzles like these
it's sometimes hard

00:01:13.900 --> 00:01:15.810
to know where to even begin.

00:01:15.810 --> 00:01:17.770
A common technique mathematicians use

00:01:17.770 --> 00:01:21.410
is to strip away everything but
the most important features.

00:01:21.410 --> 00:01:23.640
So, let's think about
what we can get rid of.

00:01:23.640 --> 00:01:25.850
What parts of the problem
aren't providing us

00:01:25.850 --> 00:01:27.740
with any useful information?

00:01:27.740 --> 00:01:29.200
Let's look at the painting.

00:01:29.200 --> 00:01:32.680
It's cool, but is it
really telling us anything?

00:01:32.680 --> 00:01:35.100
It's just joining the
two ends of the string.

00:01:35.100 --> 00:01:37.330
If we get rid of it and
tie the string together

00:01:37.330 --> 00:01:39.270
we can reframe the question as

00:01:39.270 --> 00:01:41.650
can we hang the string
so that if either one

00:01:41.650 --> 00:01:44.120
of the pins is removed,
the string will fall?

00:01:44.120 --> 00:01:46.780
It's just a simpler version
of the same question.

00:01:46.780 --> 00:01:47.939
Sorry, fashionable chicken.

00:01:47.939 --> 00:01:49.230
[chicken squawks]

00:01:49.230 --> 00:01:51.130
What else is unnecessary info?

00:01:51.130 --> 00:01:52.960
Let's take a look at these pins.

00:01:52.960 --> 00:01:54.590
Basically nothing matters about them

00:01:54.590 --> 00:01:56.920
except how they interact with the string

00:01:56.920 --> 00:01:59.740
and the fact that they don't
interact with each other.

00:01:59.740 --> 00:02:02.960
We don't care about their
positions, size, shape or colour.

00:02:02.960 --> 00:02:04.690
We don't even care that they're pins.

00:02:04.690 --> 00:02:06.760
Mathematically, it makes
sense to want to deal

00:02:06.760 --> 00:02:09.420
with just one type of
object instead of two.

00:02:09.420 --> 00:02:11.210
Imagine reading a story that's written in

00:02:11.210 --> 00:02:12.950
both English and Chinese.

00:02:12.950 --> 00:02:15.310
Sure, both languages
make up the whole story

00:02:15.310 --> 00:02:17.080
but it'd be much easier to work with

00:02:17.080 --> 00:02:19.390
if it was all the same language.

00:02:19.390 --> 00:02:21.620
This is exactly what
we're going to do now.

00:02:21.620 --> 00:02:24.340
Translate our problem all
into the same language,

00:02:24.340 --> 00:02:25.960
the language of knot theory,

00:02:25.960 --> 00:02:28.860
by converting our pins into strings.

00:02:28.860 --> 00:02:31.250
All the properties we care
about are still there.

00:02:31.250 --> 00:02:33.820
If we tie them shut they
can't interact with each other

00:02:33.820 --> 00:02:35.950
and they can trap our original string.

00:02:35.950 --> 00:02:38.760
In knot theory a closed string
is called a knot

00:02:38.760 --> 00:02:42.380
and a group of entangled
knots is called a link.

00:02:42.380 --> 00:02:44.541
Now we can reframe the question again as

00:02:44.541 --> 00:02:48.470
can you tie the three knots so that
when together they're interlocked,

00:02:48.470 --> 00:02:51.003
but if you remove one,
the others fall apart?

00:02:52.430 --> 00:02:55.040
So far we've gotten rid
of a bunch of information,

00:02:55.040 --> 00:02:57.730
but we haven't really
isolated what's important.

00:02:57.730 --> 00:03:00.410
What should be focus on if
we want to solve the puzzle?

00:03:00.410 --> 00:03:04.220
Well, there's really only one way a string
can interact with another.

00:03:04.220 --> 00:03:07.640
It can cross over them
or it can cross under.

00:03:07.640 --> 00:03:09.583
The crossings are the only
things we have control over

00:03:09.583 --> 00:03:12.200
and are the key to unlocking the puzzle.

00:03:12.200 --> 00:03:15.130
The crossings basically
determine one knot from another.

00:03:15.130 --> 00:03:18.710
But the thing is,
the same crossing can look very different.

00:03:18.710 --> 00:03:22.240
This makes knots hard to reason about
in an organised way.

00:03:22.240 --> 00:03:24.590
It's like if you had all
the components of a story

00:03:24.590 --> 00:03:27.220
but had no idea what order
they were meant to be in.

00:03:27.220 --> 00:03:28.830
But if we organise the crossings

00:03:28.830 --> 00:03:31.820
we can reason much more
clearly about the knot.

00:03:31.820 --> 00:03:34.310
Let's take this random link of two knots.

00:03:34.310 --> 00:03:37.100
If I start on a random string,
at a random point

00:03:37.100 --> 00:03:40.390
and start following the string,
drawing on my paper as I go,

00:03:40.390 --> 00:03:43.630
we can keep track of all the crossings
in an organised way.

00:03:43.630 --> 00:03:46.130
We keep going until
we come back to where we started.

00:03:46.130 --> 00:03:49.540
We've just created something
called a braid diagram.

00:03:49.540 --> 00:03:52.590
Knot theorists use these
to model all kinds of links.

00:03:52.590 --> 00:03:55.500
The point of braid diagrams is
to keep track of the crossings

00:03:55.500 --> 00:03:58.920
while getting rid of all the
unnecessary information distracting us.

00:03:58.920 --> 00:04:00.210
In a braid diagram,

00:04:00.210 --> 00:04:03.870
the lines representing our
strings are called strands.

00:04:03.870 --> 00:04:07.680
If we label the strand
positions one, two, and three,

00:04:07.680 --> 00:04:11.590
when the strand in position one
crosses over the strand in position two

00:04:11.590 --> 00:04:13.640
we can label this crossing X,

00:04:13.640 --> 00:04:17.470
and when the strand is position one
crosses under the strand in position two,

00:04:17.470 --> 00:04:19.070
we'll call this inverse X,

00:04:19.070 --> 00:04:21.990
as it basically undoes what X just did.

00:04:21.990 --> 00:04:25.820
When the strand in position two
crosses over the strand in position three

00:04:25.820 --> 00:04:27.070
we'll call this Y.

00:04:27.070 --> 00:04:30.760
And when the strand in position two
crosses under the strand in position three,

00:04:30.760 --> 00:04:33.000
we'll call this inverse Y.

00:04:33.000 --> 00:04:35.740
This notation is called a braid group.

00:04:35.740 --> 00:04:39.760
And actually everything we need to know
about our problem is encoded in these letters.

00:04:39.760 --> 00:04:43.080
The way these letters work
is that the X and inverse X cancel

00:04:43.080 --> 00:04:45.340
and the Y and inverse Y cancel.

00:04:45.340 --> 00:04:48.310
But they only cancel out if
they are next to each other.

00:04:48.310 --> 00:04:49.920
So coming back to our problem

00:04:49.920 --> 00:04:52.380
we want the knots to be
interlocked as a whole

00:04:52.380 --> 00:04:54.830
but none of them locked
individually to another.

00:04:54.830 --> 00:04:57.300
So if we think about this
in terms of our braid group,

00:04:57.300 --> 00:04:59.640
removing a knot is like
removing all crossings

00:04:59.640 --> 00:05:00.910
involving that knot.

00:05:00.910 --> 00:05:04.380
If we remove the green string
all the Xs will be removed.

00:05:04.380 --> 00:05:06.200
And if we remove the pink string

00:05:06.200 --> 00:05:08.360
all the Ys will be removed.

00:05:08.360 --> 00:05:12.210
What we want is a configuration
where as a whole nothing cancels.

00:05:12.210 --> 00:05:15.381
But if we remove either term,
everything cancels.

00:05:15.381 --> 00:05:17.570
Let's see what we can do.

00:05:17.570 --> 00:05:18.910
We've got three strings.

00:05:18.910 --> 00:05:22.350
Our system is symmetric,
so what we do first really doesn't matter.

00:05:22.350 --> 00:05:24.190
Let's just start with an X.

00:05:24.190 --> 00:05:26.670
Remember the pins can't
interact with each other,

00:05:26.670 --> 00:05:31.200
so we have no choice but to
do another X or inverse X.

00:05:31.200 --> 00:05:34.240
We don't want to have an X
and an inverse X next to each other

00:05:34.240 --> 00:05:36.650
because we don't want
anything to cancel yet.

00:05:36.650 --> 00:05:38.960
So we'll do another X crossing.

00:05:38.960 --> 00:05:42.000
This is just like wrapping
one string around the other.

00:05:42.000 --> 00:05:45.620
We could keep going like this with the Xs
but we need to include the other string,

00:05:45.620 --> 00:05:47.530
so let's do some Ys.

00:05:47.530 --> 00:05:50.330
Now because we want our terms
to cancel out in the end,

00:05:50.330 --> 00:05:53.010
that means every X needs an inverse X

00:05:53.010 --> 00:05:55.930
and every Y needs an inverse Y.

00:05:55.930 --> 00:05:58.200
If we do two inverse Y crossings now

00:05:58.200 --> 00:06:00.640
they'll immediately cancel
out the Ys we just did,

00:06:00.640 --> 00:06:02.100
which isn't what we want.

00:06:02.100 --> 00:06:04.560
So let's try two inverse Xs.

00:06:04.560 --> 00:06:07.300
Now we can do two inverse Ys.

00:06:07.300 --> 00:06:09.360
So let's take a look at where we're at.

00:06:09.360 --> 00:06:11.040
If you remove all the Y terms,

00:06:11.040 --> 00:06:13.650
the remaining X terms
cancel each other out.

00:06:13.650 --> 00:06:15.350
And if you remove all the X terms,

00:06:15.350 --> 00:06:18.240
the remaining Y terms
cancel each other out.

00:06:18.240 --> 00:06:21.120
But when everything is together,
nothing cancels.

00:06:21.120 --> 00:06:23.650
That's exactly what we want.

00:06:23.650 --> 00:06:25.870
Now let's work backwards
to the original puzzle,

00:06:25.870 --> 00:06:26.890
chicken and all.

00:06:26.890 --> 00:06:29.730
We can use the braid
diagram to model our link.

00:06:29.730 --> 00:06:31.900
Let's see if it has the property we want.

00:06:31.900 --> 00:06:34.080
That when all three of them
are together they're locked,

00:06:34.080 --> 00:06:36.533
but if you remove one
the others fall apart.

00:06:43.060 --> 00:06:44.240
Yup!

00:06:44.240 --> 00:06:46.390
Now let's bring back the
chicken and the pins.

00:06:46.390 --> 00:06:47.350
Okay guys, this is it.

00:06:47.350 --> 00:06:49.620
So now we're going to map
our braid group notation

00:06:49.620 --> 00:06:51.720
onto our system of pins.

00:06:51.720 --> 00:06:53.860
So, remember from the braid group diagram

00:06:53.860 --> 00:06:58.810
that basically a double X corresponded to
wrapping one string around the other.

00:06:58.810 --> 00:07:02.293
And a double inverse X corresponded to
undoing that move.

00:07:03.340 --> 00:07:04.710
So here we're going to say that

00:07:04.710 --> 00:07:09.233
a double X corresponds to
wrapping around a pin clockwise

00:07:10.460 --> 00:07:14.710
and a double inverse X
corresponds to undoing that move

00:07:14.710 --> 00:07:18.470
which would just be wrapping
around the pin counterclockwise.

00:07:18.470 --> 00:07:20.630
So, double X.

00:07:20.630 --> 00:07:21.923
Double inverse X.

00:07:22.810 --> 00:07:23.763
Double Y.

00:07:24.630 --> 00:07:25.853
Double inverse Y.

00:07:27.180 --> 00:07:28.053
So let's do it.

00:07:29.240 --> 00:07:30.980
Double X

00:07:30.980 --> 00:07:31.963
Double Y.

00:07:33.230 --> 00:07:36.843
Double inverse X, wrapping
around counterclockwise.

00:07:37.720 --> 00:07:39.223
Double inverse Y.

00:07:42.040 --> 00:07:43.675
So now the moment of truth.

00:07:43.675 --> 00:07:45.925
[drumroll]

00:07:49.524 --> 00:07:51.490
[thudding]

00:07:51.490 --> 00:07:52.323
BOTH: Mathematics!

00:07:53.390 --> 00:07:55.130
So this definitely wasn't the easiest

00:07:55.130 --> 00:07:57.460
or most straightforward
way to solve this puzzle.

00:07:57.460 --> 00:07:59.740
So, why did we do it this way?

00:07:59.740 --> 00:08:01.670
Well, now we have this whole framework

00:08:01.670 --> 00:08:05.140
for solving this problem for
any number of pins easily.

00:08:05.140 --> 00:08:07.030
If we want to add
another pin to the puzzle

00:08:07.030 --> 00:08:09.360
this would be a nightmare to brute force.

00:08:09.360 --> 00:08:11.500
But we can just work backwards
from our braid group,

00:08:11.500 --> 00:08:12.393
and it's simple.

00:08:13.870 --> 00:08:16.400
Today we used knot theory
to solve a fun puzzle,

00:08:16.400 --> 00:08:19.660
but it actually leads to some
very fundamental mathematics.

00:08:19.660 --> 00:08:21.680
We were searching for a
way to wrap the string

00:08:21.680 --> 00:08:25.070
around both pins as a whole,
but neither one individually.

00:08:25.070 --> 00:08:29.330
But more broadly we had to keep track
of the relationships between smaller parts

00:08:29.330 --> 00:08:30.730
of a bigger system.

00:08:30.730 --> 00:08:35.090
This kind of connection has led to
deep insights in many areas of science.

00:08:35.090 --> 00:08:39.200
Just recently, people have been exploring
the design of quantum computers

00:08:39.200 --> 00:08:43.360
using particles that behave just like
the braids that we saw in this video.

00:08:43.360 --> 00:08:45.560
So if you want to win
a Nobel prize someday

00:08:45.560 --> 00:08:47.350
better start tying some knots!

00:08:47.350 --> 00:08:49.380
- Thank you Jade! 
Go subscribe to Up and Atom.

00:08:49.380 --> 00:08:52.160
I would recommend starting with her video
on quantum tunnelling.

00:08:52.160 --> 00:08:55.413
And next week, a video that
may leave you breathless.

